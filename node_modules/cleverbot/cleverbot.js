var crypto = require('crypto');
var http = require('http');
var qss = require('querystring').stringify;

var params_list = "sessionid logurl vText8 vText7 vText6 vText5 vText4 vText3 vText2 prevref emotionalhistory ttsLocMP3 ttsLocTXT ttsLocTXT3 ttsText lineRef lineURL linePOST lineChoices lineChoicesAbbrev typingData divert"
	.split(" ");

function CleverBot(){
	if(!(this instanceof CleverBot)) return new CleverBot();
	this._params = {start:'y',icognoid:'wsf',fno:0,sub:'Say',islearning:1,cleanslate:'false'};
	this.backlog = [];
};
CleverBot.prototype.think = function(message,callback){
	var bot = this;
	if(!callback){
		callback = message;
		message = "{pass}";
	}
	
	bot._params.stimulus = message;
	bot._params.icognocheck = crypto.createHash('md5').update(qss(bot._params).substring(9,35)).digest('hex');
	var qs = qss(bot._params);
	
	return http.request({
		method: 'POST',
		host: 'www.cleverbot.com',
		path: '/webservicemin',
		port: '80',
		headers: {
			'Origin': 'http://www.cleverbot.com',
			'Referer': 'http://www.cleverbot.com',
			'Accept': '*/*',
			'Content-Type': 'application/x-www-form-urlencoded',
			'Content-Length': qs.length
		}
	}, function(res){
		res.setEncoding('utf8');
		res.body = "";
		res.on('data', function(chunk){ res.body += chunk; });
		res.on('end', function(){
			if(res.statusCode != 200) return fail("HTTP "+res.statusCode);
			if(res.body == "DENIED") return fail("Access Denied");
			if(!res.body.match(/\r.*\r.*\r/)) return fail("Not enough lines?");
			
			var lines = res.body.split("\r");
			for(var i=0; i<params_list.length; i++){
				bot._params[params_list[i]] = lines[i+1];
			}
			var response = new CleverBotResponse(lines);
			if(response.answer === undefined) return fail("undefined?");
			
			bot.backlog.push(response);
			callback(undefined, response.answer);
			
		});
	}).on('error', callback).end(qs);
	
	function fail(msg){
		callback(new Error(msg));
	}
};
function CleverBotResponse(data){
	this.question = data[8];
	this.answer = data[16];
}

module.exports = CleverBot;